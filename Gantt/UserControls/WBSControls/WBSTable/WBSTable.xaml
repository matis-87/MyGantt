<UserControl x:Class="Gantt.UserControls.WBSControls.WBSTable.WBSTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gantt.UserControls.WBSControls.WBSTable"
             xmlns:eb="clr-namespace:Gantt.UserControls.WBSControls.WBSEditBox"
             mc:Ignorable="d" 
             xmlns:model="clr-namespace:ProjectModels;assembly=ProjectModels"
             xmlns:self="clr-namespace:Gantt.Model"
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="mainView">
    <Grid>
        <TreeView Grid.Column="0" BorderBrush="Transparent"  ItemsSource="{Binding ItemsSource, ElementName=mainView}" ScrollViewer.HorizontalScrollBarVisibility="Hidden"   HorizontalContentAlignment="Stretch" Background="Transparent">
            <TreeView.Resources>
                <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander"   ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="1" Margin="-12,0,0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="#444f6b"/>
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding isExpanded, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Border  x:Name="ItemBorder"  >
                                    <Grid Width="auto" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ToggleButton x:Name="Expander" ClickMode="Press"  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" >
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15">

                                                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                                                                        <TextBlock.Style>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="Text" Value="+"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsChecked, ElementName=Expander}" Value="True">
                                                                                        <Setter Property="Text" Value="-"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </TextBlock.Style>
                                                                    </TextBlock>

                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd" Margin="0,5,20,0" Padding="0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"   SnapsToDevicePixels="true">
                                  
                                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="1" Grid.Column="1" Grid.Row="1" Margin="0,0,0,0"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="True">
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">

                     
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate  DataType="{x:Type model:ProjectTask}" ItemsSource="{Binding Children}" >
                    <DockPanel Margin="0,0,0,0" Height="50" HorizontalAlignment="Stretch"    Opacity="1">
                        <Border 
  HorizontalAlignment="Stretch">
                            <Border>
                                <Border.ContextMenu>
                                    <ContextMenu HorizontalAlignment="Right"  >
                                        <ContextMenu.Style>
                                            <Style TargetType="ContextMenu">
                                                <Setter Property="Background" Value="White"/>
                                            </Style>
                                        </ContextMenu.Style>
                                        <MenuItem Header="Wstaw zadanie" Tag="{Binding}"  Click="MenuItem_InsertTask"/>
                                        <MenuItem Header="Wytnij" Tag="{Binding}"  Click="MenuItem_Cut" />
                                        <MenuItem Header="Kopiuj" Tag="{Binding}" Click="MenuItem_Click_2" />
                                        <MenuItem Header="Wklej"  Tag="{Binding}" IsEnabled="{Binding ClipboardHasValue, ElementName=mainView }" Click="MenuItem_Click" /> 
                                        <MenuItem Header="Usuń" Tag="{Binding}" Click="MenuItem_Click_1"/>
                                    </ContextMenu>
                                </Border.ContextMenu>
                                 <Grid Background="White">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="5,5,0,0" VerticalAlignment="Center" Foreground="Black"  Text="{Binding WbsCode}" FontSize="11"/>
                                    <eb:WBSEditBox  Text="{Binding Name, Mode=TwoWay}"   VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="11"/>
                                    </StackPanel>
                                    <eb:WBSEditBox  Text="{Binding TaskDescription, Mode=TwoWay}"   Grid.Column="1" Margin="0,0,20,0"    VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="10"/>
                             
                                     
                                </Grid>
                  
                            </Border>
                        </Border>
                    </DockPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

    </Grid>
</UserControl>
