<UserControl x:Class="Gantt.UserControls.GanttControls.ExpandableGanttChart.ExpandableGanttChart"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gantt.UserControls.GanttControls.ExpandableGanttChart"
             xmlns:loc="clr-namespace:Gantt.UserControls.Helpers"
             mc:Ignorable="d" 
             xmlns:gc="clr-namespace:Gantt.UserControls.GanttControls.GanttChart"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:self="clr-namespace:Gantt.Model" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:models ="clr-namespace:ProjectModels;assembly=ProjectModels"
             x:Name="mainView">
    
    <Grid Background="Transparent" MouseLeftButtonUp="DockPanel_MouseLeftButtonUp" MouseEnter="DockPanel_MouseEnter" MouseMove="DockPanel_MouseMove" MouseLeave="DockPanel_MouseLeave" MouseLeftButtonDown="DockPanel_MouseLeftButtonDown" >
       
        <TreeView ItemsSource="{Binding ListaT, ElementName=mainView}"  x:Name="tree" HorizontalContentAlignment="Stretch" Background="Transparent" Tag="{Binding StartT}" >
            <i:Interaction.Triggers>
                <loc:HandlingEventTrigger EventName="PreviewMouseDoubleClick"/>
         
            </i:Interaction.Triggers>
            <TreeView.Resources>
                        <gc:TimeMarginConverter x:Key="WidthConverter" />
                        <gc:DurationConverter x:Key="DurationConv"/>
                <gc:DayToTaskStateConverter x:Key="TaskState"/>
                <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
     
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" IsEnabled="False" ClickMode="Press" />


                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="1" Margin="-12,0,0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                                
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    
                    <Style.Triggers>
                   
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style  x:Key="Button3" TargetType="Label">
                    <Setter  Property="Background" Value="LightBlue"/>
                    <Setter Property="Width">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource DurationConv}">
                                <Binding Path="Duration" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" >
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource WidthConverter}">
                                <Binding Path="Start" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Label">
                                <Grid >
                                    <Grid Grid.Column="0" Width="{TemplateBinding Property=Width}" HorizontalAlignment="Center" Margin="0"  VerticalAlignment="Top" Height="{TemplateBinding Property=Height}" Background="Transparent"  >
                                        <Border  BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="1" Color="Gray" Opacity="0.5" Direction="270" />
                                            </Border.Effect>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Margin" Value="0,5,0,5"/>
                                                    <Setter Property="CornerRadius" Value="4"/>
                                                    <Setter Property="Background" Value="DarkGray"/>
                                                    <Style.Triggers>

                                                        <MultiDataTrigger >
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding State}" Value="0"/>
                                                                <Condition Binding="{Binding hasChildren}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" Value="Red"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding State}" Value="1"/>
                                                                <Condition Binding="{Binding hasChildren}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" Value="LightBlue"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding State}" Value="2"/>
                                                                <Condition Binding="{Binding hasChildren}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" Value="Orange"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsCompleted}" Value="True"/>
                                                                <Condition Binding="{Binding hasChildren}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" Value="Green"/>
                                                        </MultiDataTrigger>

                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSelected}" Value="True"/>
                                                            <Condition Binding="{Binding hasChildren}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 5,0,5" />
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="0, 2,0,2" />
                                                                        </ThicknessAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiDataTrigger.EnterActions>
                                                            <MultiDataTrigger.ExitActions >
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 2,0,2" />
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="0, 5,0,5" />
                                                                        </ThicknessAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiDataTrigger.ExitActions>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>


                                            <Border Background="Violet" CornerRadius="3">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="Opacity" Value="0"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding hasChildren}" Value="true">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimation
                  Storyboard.TargetProperty="(Border.Opacity)"
                  From="0" To="1" Duration="0:0:0.2" AutoReverse="False"
                 />

                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimation
                  Storyboard.TargetProperty="(Border.Opacity)"
                  From="1" To="0" Duration="0:0:0.2" AutoReverse="False"
              />

                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <ContentPresenter  Margin="0" VerticalAlignment="Center" Content="{TemplateBinding Label.Content}" />
                                            </Border>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="28"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding hasChildren}" Value="true">
                            <Setter Property="Height" Value="15"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style  x:Key="ResizeButton" TargetType="Label">
                            <Setter Property="Background" Value="Red"/>
                            <Setter  Property="Background" Value="Transparent"/>
                            <Setter Property="Width" Value="5"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Label">
                                        <Grid >
                                    <Grid Grid.Column="0" Width="{TemplateBinding Property=Width}" HorizontalAlignment="Center" Margin="0"  VerticalAlignment="Top" Height="{TemplateBinding Property=Height}" Background="Transparent"  >
                                        <Border   Background="{TemplateBinding Background}"      CornerRadius="0,4,4,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Margin" Value="0,5,0,5"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 5,0,5" />
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="0, 2,0,2" />
                                                                        </ThicknessAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions >
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 2,0,2" />
                                                                            <SplineThicknessKeyFrame KeyTime="00:00:00.2" Value="0, 5,0,5" />
                                                                        </ThicknessAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ContentPresenter  Margin="0" VerticalAlignment="Center" Content="{TemplateBinding Label.Content}" />
                                        </Border>
                                    </Grid>
                                </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                        <DataTrigger Binding="{Binding hasChildren}" Value="true">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                        </Style>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid Width="auto" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ToggleButton x:Name="Expander" Visibility="Hidden"  ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                           
                                            </ToggleButton>
                                            <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="1" Margin="0,0,0,0"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                        <DataTrigger Binding="{Binding isExpanded}" Value="True">
                            <Setter Property="IsExpanded" Value="True"/>
                        </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:ProjectTask}" ItemsSource="{Binding Children}"   >
                    <DockPanel  Height="30" HorizontalAlignment="Stretch"   Opacity="1">
                                <Border BorderBrush="Black"  HorizontalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <Grid>
                                    <Label  Style="{StaticResource Button3}"  Tag="{Binding}"    Opacity="1"  MouseLeave="Button_MouseLeave" MouseLeftButtonUp="ListBox_MouseLeftButtonUp" MouseMove="Button_MouseMove" PreviewMouseLeftButtonDown="Label_PreviewMouseLeftButtonDown" >
                                    </Label>
                                    <Label Style="{StaticResource ResizeButton}" Tag="{Binding}" Height="28" VerticalAlignment="Center" HorizontalAlignment="Right"  MouseLeave="Button_MouseLeave" MouseLeftButtonUp="ListBox_MouseLeftButtonUp" MouseMove="Button_MouseMove" PreviewMouseLeftButtonDown="Label_PreviewMouseLeftButtonDown_1" />
                                        </Grid>
                                <Label Content="{Binding Name}"   VerticalAlignment="Center" FontSize="11"/>
                                    </StackPanel>
                                </Border>
                            </DockPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Grid>
</UserControl>